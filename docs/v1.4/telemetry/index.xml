<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Telemetry on KrakenD - Open source API Gateway</title><link>https://www.krakend.io/docs/v1.4/telemetry/</link><description>Recent content in Telemetry on KrakenD - Open source API Gateway</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 15 Sep 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://www.krakend.io/docs/v1.4/telemetry/index.xml" rel="self" type="application/rss+xml"/><item><title>Sending out logs, metrics, and traces</title><link>https://www.krakend.io/docs/v1.4/telemetry/opencensus/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/v1.4/telemetry/opencensus/</guid><description>The Opencensus exporter is a single component that allows you to export data to multiple providers, both open source and privative.
You will be interested in Opencensus when you want to see data in one of its supported exporters. For instance, you might want to send metrics to Prometheus. That would be as easy as adding this snippet in the root level of your krakend.json file:
{ &amp;quot;version&amp;quot;: 2, &amp;quot;extra_config&amp;quot;: { &amp;quot;github_com/devopsfaith/krakend-opencensus&amp;quot;: { &amp;quot;exporters&amp;quot;: { &amp;quot;prometheus&amp;quot;: { &amp;quot;port&amp;quot;: 9091 &amp;quot;namespace&amp;quot;: &amp;quot;krakend&amp;quot; } } } } } Configuration The Opencensus only needs an exporter to work, although multiple exporters can be added in the same configuration.</description></item><item><title>Exporting metrics to Prometheus</title><link>https://www.krakend.io/docs/v1.4/telemetry/prometheus/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/v1.4/telemetry/prometheus/</guid><description>Prometheus is an open-source systems monitoring and alerting toolkit.
The Opencensus exporter allows you to expose data to Prometheus. Enabling it only requires you to include in the root level of your configuration the Opencensus middleware with the prometheus exporter. Specify the port which Prometheus should hit, the namespace (optional), and Prometheus will start receiving the data. { &amp;#34;version&amp;#34;: 2, &amp;#34;extra_config&amp;#34;: { &amp;#34;github_com/devopsfaith/krakend-opencensus&amp;#34;: { &amp;#34;exporters&amp;#34;: { &amp;#34;prometheus&amp;#34;: { &amp;#34;port&amp;#34;: 9091, &amp;#34;namespace&amp;#34;: &amp;#34;krakend&amp;#34;, &amp;#34;tag_host&amp;#34;: false, &amp;#34;tag_path&amp;#34;: true, &amp;#34;tag_method&amp;#34;: true, &amp;#34;tag_statuscode&amp;#34;: false } } } } }</description></item><item><title>Exporting metrics and events to InfluxDB</title><link>https://www.krakend.io/docs/v1.4/telemetry/influxdb/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/v1.4/telemetry/influxdb/</guid><description>InfluxDB is a time series database designed to handle high write and query loads.
The Opencensus exporter allows you export data to InfluxDB for monitoring metrics and events. Enabling it only requires you to add the influxdb exporter in the opencensus module.
The following configuration snippet sends data to your InfluxDB:
&amp;quot;github_com/devopsfaith/krakend-opencensus&amp;quot;: { &amp;quot;exporters&amp;quot;: { &amp;quot;influxdb&amp;quot;: { &amp;quot;address&amp;quot;: &amp;quot;http://192.168.99.100:8086&amp;quot;, &amp;quot;db&amp;quot;: &amp;quot;krakend&amp;quot;, &amp;quot;timeout&amp;quot;: &amp;quot;1s&amp;quot;, &amp;quot;username&amp;quot;: &amp;quot;your-influxdb-user&amp;quot;, &amp;quot;password&amp;quot;: &amp;quot;your-influxdb-password&amp;quot; } } } address is the URL (including port) where your InfluxDB is installed.</description></item><item><title>Exporting traces to Datadog</title><link>https://www.krakend.io/docs/v1.4/telemetry/datadog/</link><pubDate>Fri, 24 Jul 2020 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/v1.4/telemetry/datadog/</guid><description>Datadog is a monitoring and security platform for developers, IT operations teams and business in the cloud.
Datadog configuration The Opencensus exporter allows you export data to Datadog. Enabling it only requires you to add the datadog exporter in the opencensus module.
The following configuration snippet sends data to your Datadog:
&amp;quot;extra_config&amp;quot;: { &amp;quot;github_com/devopsfaith/krakend-opencensus&amp;quot;: { &amp;quot;exporters&amp;quot;: { &amp;quot;datadog&amp;quot;: { &amp;quot;tags&amp;quot;: [ &amp;quot;gw&amp;quot; ], &amp;quot;global_tags&amp;quot;: { &amp;quot;env&amp;quot;: &amp;quot;prod&amp;quot; }, &amp;quot;disable_count_per_buckets&amp;quot;: true, &amp;quot;trace_address&amp;quot;: &amp;quot;localhost:8126&amp;quot;, &amp;quot;stats_address&amp;quot;: &amp;quot;localhost:8125&amp;quot;, &amp;quot;namespace&amp;quot;: &amp;quot;krakend&amp;quot;, &amp;quot;service&amp;quot;: &amp;quot;gateway&amp;quot; } } } } tags (list) specifies a set of global tags to attach to each metric global_tags (object) GlobalTags holds a set of tags (key/value) that will automatically be applied to all exported spans.</description></item><item><title>Exporting traces to Zipkin</title><link>https://www.krakend.io/docs/v1.4/telemetry/zipkin/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/v1.4/telemetry/zipkin/</guid><description>Zipkin is a distributed tracing system. It helps gather timing data needed to troubleshoot latency problems in service architectures.
The Opencensus exporter allows you export data to Zipkin. Enabling it only requires you to add the zipkin exporter in the opencensus module.
The following configuration snippet sends data to your Zipkin:
&amp;quot;github_com/devopsfaith/krakend-opencensus&amp;quot;: { &amp;quot;exporters&amp;quot;: { &amp;quot;zipkin&amp;quot;: { &amp;quot;collector_url&amp;quot;: &amp;quot;http://192.168.99.100:9411/api/v2/spans&amp;quot;, &amp;quot;service_name&amp;quot;: &amp;quot;krakend&amp;quot; }, } } collector_url is the URL (including port and path) where your Zipkin is accepting the spans service_name the service name registered in Zipkin See also the additional settings of the Opencensus module that can be declared.</description></item><item><title>Exporting traces to Jaeger</title><link>https://www.krakend.io/docs/v1.4/telemetry/jaeger/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/v1.4/telemetry/jaeger/</guid><description>Jaeger is an open source, end-to-end distributed tracing system that allows you to monitor and troubleshoot transactions in complex distributed systems.
The Opencensus exporter allows you export data to Jaeger. Enabling it only requires you to add the jaeger exporter in the opencensus module.
The following configuration snippet sends data to your Jaeger:
&amp;quot;github_com/devopsfaith/krakend-opencensus&amp;quot;: { &amp;quot;exporters&amp;quot;: { &amp;quot;jaeger&amp;quot;: { &amp;quot;endpoint&amp;quot;: &amp;quot;http://192.168.99.100:14268/api/traces&amp;quot;, &amp;quot;service_name&amp;quot;:&amp;quot;krakend&amp;quot; }, } } endpoint is the URL (including port) where your Jaeger is service_name the service name registered in Jaeger See also the additional settings of the Opencensus module that can be declared.</description></item><item><title>Exporting traces to AWS X-Ray</title><link>https://www.krakend.io/docs/v1.4/telemetry/xray/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/v1.4/telemetry/xray/</guid><description>AWS X-Ray is a service offered by Amazon that provides an end-to-end view of requests as they travel through your application, and shows a map of your applicationâ€™s underlying components.
The Opencensus exporter allows you export data to AWS X-Ray. Enabling it only requires you to add the xray exporter in the opencensus module.
The following configuration snippet sends data to your X-Ray:
&amp;quot;github_com/devopsfaith/krakend-opencensus&amp;quot;: { &amp;quot;exporters&amp;quot;: { &amp;quot;xray&amp;quot;: { &amp;quot;version&amp;quot;: &amp;quot;latest&amp;quot;, &amp;quot;region&amp;quot;: &amp;quot;eu-west-1&amp;quot;, &amp;quot;use_env&amp;quot;: false, &amp;quot;access_key_id&amp;quot;: &amp;quot;myaccesskey&amp;quot;, &amp;quot;secret_access_key&amp;quot;: &amp;quot;mysecretkey&amp;quot; }, } } version: The version of the AWS X-Ray service to use.</description></item><item><title>Exporting metrics, logs and events to Google Stackdriver</title><link>https://www.krakend.io/docs/v1.4/telemetry/stackdriver/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/v1.4/telemetry/stackdriver/</guid><description>Google Stackdriver aggregates metrics, logs, and events from infrastructure, giving developers and operators a rich set of observable signals that speed root-cause analysis and reduce mean time to resolution (MTTR).
The Opencensus exporter allows you export data to Google Stackdriver. Enabling it only requires you to add the stackdriver exporter in the opencensus module.
The following configuration snippet sends the data:
&amp;quot;github_com/devopsfaith/krakend-opencensus&amp;quot;: { &amp;quot;exporters&amp;quot;: { &amp;quot;stackdriver&amp;quot;: { &amp;quot;project_id&amp;quot;: &amp;quot;my-krakend-project&amp;quot;, &amp;quot;metrics_prefix&amp;quot;: &amp;quot;krakend&amp;quot;, &amp;quot;default_labels&amp;quot;: { &amp;quot;env&amp;quot;: &amp;quot;production&amp;quot; } } } } project_id: The identifier of your Google Cloud project.</description></item><item><title>Exporting metrics, logs and events to Azure Monitor</title><link>https://www.krakend.io/docs/v1.4/telemetry/azure/</link><pubDate>Mon, 16 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/v1.4/telemetry/azure/</guid><description>Azure Monitor collect, analyzes, and acts on telemetry data from your Azure and on-premises environments. Azure Monitor helps you maximize performance and availability of your applications and proactively identify problems in seconds.
The Opencensus exporter allows you export data to Azure Monitor. Enabling it only requires you to add the ocagent exporter in the opencensus module, see how to configure the OpenCensus Agent.</description></item><item><title>Exporting metrics, logs, and events to the OpenCensus Agent</title><link>https://www.krakend.io/docs/v1.4/telemetry/ocagent/</link><pubDate>Mon, 16 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/v1.4/telemetry/ocagent/</guid><description>The ocagent exporter sends OpenCensus Stats and Traces to the OpenCensus Agent, instead of pushing data to backendsâ€™ exporters.
For instance, you can enable ocagent to upload data to the OpenCensus Agent, and from there, the agent is simply scraped by a Prometheus.
You can integrate the OpenCensus Agent with Azure Monitor, Jaeger, or Prometheus to name a few examples.
Enabling it only requires you to add the ocagent exporter in the opencensus module.</description></item><item><title>Exporting to the logger</title><link>https://www.krakend.io/docs/v1.4/telemetry/logger/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/v1.4/telemetry/logger/</guid><description>Opencensus can export data to the system logger as another exporter.
Enabling it only requires you to add the logger exporter in the opencensus module.
The following configuration snippet enables the logger:
&amp;quot;github_com/devopsfaith/krakend-opencensus&amp;quot;: { &amp;quot;exporters&amp;quot;: { &amp;quot;logger&amp;quot;: { &amp;quot;stats&amp;quot;: true, &amp;quot;spans&amp;quot;: true } } } stats: Whether to log the statistics or not spans: Whether to log the spans or not See also the additional settings of the Opencensus module that can be declared.</description></item></channel></rss>