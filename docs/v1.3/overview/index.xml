<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction to KrakenD on KrakenD - Open source API Gateway</title><link>https://www.krakend.io/docs/v1.3/overview/</link><description>Recent content in Introduction to KrakenD on KrakenD - Open source API Gateway</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 25 Oct 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://www.krakend.io/docs/v1.3/overview/index.xml" rel="self" type="application/rss+xml"/><item><title>Installing KrakenD</title><link>https://www.krakend.io/docs/v1.3/overview/installing/</link><pubDate>Fri, 01 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/v1.3/overview/installing/</guid><description>KrakenD is a single binary file that does not require any external libraries to work. To install KrakenD choose your operative system in the downloads section or use the Docker image.
Download KrakenD and Generate the configuration file
Just exploring?
Use the KrakenD Playground if you want to play with KrakenD without configuring it. The Playground comes with several flavors of KrakenD and a mock API. Everything is ready to start playing, just do a docker-compose up!</description></item><item><title>Using KrakenD</title><link>https://www.krakend.io/docs/v1.3/overview/usage/</link><pubDate>Tue, 25 Oct 2016 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/v1.3/overview/usage/</guid><description>From an operations point of view KrakenD, is very simple to use. It only requires you to pass the path the configuration file (which defines behaviors and endpoints). Additionally, you can enable the debug with the -d flag, and that&amp;rsquo;s pretty much everything.
TL;DR Generate a configuration file with your endpoints definition. The easier way to generate it is using the designer Check the syntax of your krakend.json is good Syntax checking&amp;nbsp; $krakend&amp;nbsp;check&amp;nbsp;--config&amp;nbsp;krakend.</description></item><item><title>Lura vs. KrakenD</title><link>https://www.krakend.io/docs/v1.3/overview/krakend-vs-krakend-ce/</link><pubDate>Sat, 23 Jun 2018 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/v1.3/overview/krakend-vs-krakend-ce/</guid><description>If you had a quick look at our git repositories or the documentation, you might be confused at first, as there is something called the Lura Project and also KrakenD.
TL;DR; Difference between Lura, KrakenD, and Enterprise Lura is the KrakenD&amp;rsquo;s engine. Formerly known as &amp;ldquo;KrakenD framework&amp;rdquo; until we donated it to The Linux Foundation on 2021. It is not a product itself but a set of libraries. KrakenD is our open-source API Gateway ready to use KrakenD Enterprise is our commercial version, including services to businesses Lura Project The Lura Project is our original KrakenD framework that we donated to The Linux Foundation on 2021.</description></item><item><title>The KrakenD Playground</title><link>https://www.krakend.io/docs/v1.3/overview/playground/</link><pubDate>Thu, 13 Sep 2018 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/v1.3/overview/playground/</guid><description>If you are new to KrakenD, a quick way to get started is to make use of the KrakenD Playground.
The KrakenD Playground is a Docker Compose environment that puts together the necessary pieces to let you play with KrakenD in a working environment.
As KrakenD is an API gateway, we have also added to the environment an API (backend) to feed the gateway and a website to make use of the data.</description></item><item><title>Tutorials and Guides</title><link>https://www.krakend.io/docs/v1.3/overview/guides/</link><pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/v1.3/overview/guides/</guid><description>The documentation in this site covers all the functionality of KrakenD API Gateway, but over time we have received from KrakenD users all kinds of tutorials, guides and other resources that illustrate how to do a specific thing. We have included below a few links, but you can share yours.
User-contributed resources Getting started with KrakenD on Kubernetes / AKS by Christian Dennig (Cloud Solution Architect @Microsoft) Microservices with Micronaut, KrakenD and Consul by Piotr Minkowski (Solution Architect @ Red Hat) How to Successfully Set Up KrakenD on GKE: A Step by Step Guide by Vijay Savanth on Hackernoon Writing Plugins using Golang by Ilya Nemtsev on Eventslooped Building Micro Services with .</description></item><item><title>Verifying packages (PGP and SHA256)</title><link>https://www.krakend.io/docs/v1.3/overview/verifying-packages/</link><pubDate>Fri, 01 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/v1.3/overview/verifying-packages/</guid><description>How to make sure what you are downloading is legit.
PGP We will check the detached signature PGP against our package KrakenD.
$ gpg --verify krakend_1.3.0_amd64.tar.gz.asc krakend_1.3.0_amd64.tar.gz gpg: Signature made Sun Mar 10 18:17:18 2019 UTC using RSA key ID 5DE6FD698AD6FDD2 gpg: Can't check signature: public key not found We don&amp;rsquo;t have the packager public key (AB39BEA1) in our system. You need to retrieve the public key from a key server.</description></item></channel></rss>