<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Telemetry on KrakenD - Open source API Gateway</title><link>https://www.krakend.io/docs/enterprise/telemetry/</link><description>Recent content in Telemetry on KrakenD - Open source API Gateway</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 15 Sep 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://www.krakend.io/docs/enterprise/telemetry/index.xml" rel="self" type="application/rss+xml"/><item><title>Exporting metrics and events to InfluxDB</title><link>https://www.krakend.io/docs/enterprise/telemetry/influxdb/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/telemetry/influxdb/</guid><description>KrakenD can expose very detailed metrics to provide a monitoring dashboard. One of the richest monitoring solutions at the metrics level is the combination of Extended metrics with the native Influx exporter. The two components let you send detailed metrics to InfluxDB and draw them later on our preconfigured Grafana dashboard.
InfluxDB configuration Notice that this document describes two different implementations of InfluxDB:
Native InfluxDB exporter (recommended) OpenCensus InfluxDB exporter Which InfluxDB implementation should I choose?</description></item><item><title>Google Analytics</title><link>https://www.krakend.io/docs/enterprise/telemetry/google-analytics/</link><pubDate>Fri, 24 Jul 2020 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/telemetry/google-analytics/</guid><description>Google Analytics provides a reliable platform to measure the ROI of your API and track its usage. In addition, the KrakenD GAnalytics integration allows you to generate API Analytics from your API activity, using Google&amp;rsquo;s Analytics platform as the storage backend. The same platform and tools you are using today to track web pages can help you track your API.
This component records the API activity and reports it efficiently and asynchronously in batches to Google Analytics.</description></item><item><title>Sending out logs, metrics, and traces</title><link>https://www.krakend.io/docs/enterprise/telemetry/opencensus/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/telemetry/opencensus/</guid><description>The Opencensus exporter is a single component that allows you to export data to multiple providers, both open source and privative.
You will be interested in Opencensus when you want to see data in one of its supported exporters. For instance, you might want to send metrics to Prometheus. That would be as easy as adding this snippet in the root level of your krakend.json file:
{ &amp;#34;version&amp;#34;: 3, &amp;#34;extra_config&amp;#34;: { &amp;#34;telemetry/opencensus&amp;#34;: { &amp;#34;exporters&amp;#34;: { &amp;#34;prometheus&amp;#34;: { &amp;#34;port&amp;#34;: 9091, &amp;#34;namespace&amp;#34;: &amp;#34;krakend&amp;#34; } } } } } Configuration The Opencensus needs at least an exporter to work, although multiple exporters can be added in the same configuration.</description></item><item><title>Preconfigured Grafana dashboard</title><link>https://www.krakend.io/docs/enterprise/telemetry/grafana/</link><pubDate>Tue, 17 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/telemetry/grafana/</guid><description>The preconfigured Grafana dashboard for KrakenD offers valuable information to understand the performance of your services and detect anomalies in the service.
The dashboard is extensive and offers you metrics like:
Requests from users to KrakenD Requests from KrakenD to your backends Response times Memory usage and details Endpoints and status codes Heatmaps Open connections Throughput Distributions, timers, garbage collection and a long etcetera Importing a Grafana dashboard These are the different Grafana data sources you can use for our dashboards:</description></item><item><title>Exporting metrics to Prometheus</title><link>https://www.krakend.io/docs/enterprise/telemetry/prometheus/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/telemetry/prometheus/</guid><description>Prometheus is an open-source systems monitoring and alerting toolkit.
The Opencensus exporter allows you to expose data to Prometheus, and publishes a /metrics endpoint in the selected port.
Example: http://localhost:9091/metrics
Enabling it only requires you to include in the root level of your configuration the Opencensus middleware with the prometheus exporter. Specify the port which Prometheus should hit, the namespace (optional), and Prometheus now can pull the data.
{ &amp;#34;version&amp;#34;: 3, &amp;#34;extra_config&amp;#34;: { &amp;#34;telemetry/opencensus&amp;#34;: { &amp;#34;exporters&amp;#34;: { &amp;#34;prometheus&amp;#34;: { &amp;#34;port&amp;#34;: 9091, &amp;#34;namespace&amp;#34;: &amp;#34;krakend&amp;#34;, &amp;#34;tag_host&amp;#34;: false, &amp;#34;tag_path&amp;#34;: true, &amp;#34;tag_method&amp;#34;: true, &amp;#34;tag_statuscode&amp;#34;: false } } } } } As with all OpenCensus exporters, you can add optional settings in the telemetry/opencensus level:</description></item><item><title>Exporting traces to Datadog</title><link>https://www.krakend.io/docs/enterprise/telemetry/datadog/</link><pubDate>Fri, 24 Jul 2020 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/telemetry/datadog/</guid><description>Datadog is a cloud monitoring and security platform for developers, IT operations teams, and businesses.
Datadog configuration The Opencensus exporter allows you to export data to Datadog. Enabling it only requires you to add the datadog exporter in the opencensus module.
The following configuration snippet sends data to your Datadog:
{ &amp;#34;version&amp;#34;: 3, &amp;#34;extra_config&amp;#34;: { &amp;#34;telemetry/opencensus&amp;#34;: { &amp;#34;exporters&amp;#34;: { &amp;#34;datadog&amp;#34;: { &amp;#34;tags&amp;#34;: [ &amp;#34;gw&amp;#34; ], &amp;#34;global_tags&amp;#34;: { &amp;#34;env&amp;#34;: &amp;#34;prod&amp;#34; }, &amp;#34;disable_count_per_buckets&amp;#34;: true, &amp;#34;trace_address&amp;#34;: &amp;#34;localhost:8126&amp;#34;, &amp;#34;stats_address&amp;#34;: &amp;#34;localhost:8125&amp;#34;, &amp;#34;namespace&amp;#34;: &amp;#34;krakend&amp;#34;, &amp;#34;service&amp;#34;: &amp;#34;gateway&amp;#34; } } } } } As with all OpenCensus exporters, you can add optional settings in the telemetry/opencensus level:</description></item><item><title>Exporting traces to Zipkin</title><link>https://www.krakend.io/docs/enterprise/telemetry/zipkin/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/telemetry/zipkin/</guid><description>Zipkin is a distributed tracing system. It helps gather timing data needed to troubleshoot latency problems in service architectures.
The Opencensus exporter allows you export data to Zipkin. Enabling it only requires you to add the zipkin exporter in the opencensus module.
The following configuration snippet sends data to your Zipkin:
{ &amp;#34;version&amp;#34;: 3, &amp;#34;extra_config&amp;#34;: { &amp;#34;telemetry/opencensus&amp;#34;: { &amp;#34;exporters&amp;#34;: { &amp;#34;zipkin&amp;#34;: { &amp;#34;collector_url&amp;#34;: &amp;#34;http://192.168.99.100:9411/api/v2/spans&amp;#34;, &amp;#34;service_name&amp;#34;: &amp;#34;krakend&amp;#34; } } } } } As with all OpenCensus exporters, you can add optional settings in the telemetry/opencensus level:</description></item><item><title>Exporting traces to Jaeger</title><link>https://www.krakend.io/docs/enterprise/telemetry/jaeger/</link><pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/telemetry/jaeger/</guid><description>Jaeger is an open source, end-to-end distributed tracing system that allows you to monitor and troubleshoot transactions in complex distributed systems.
The Opencensus exporter allows you export data to Jaeger. Enabling it only requires you to add the jaeger exporter in the opencensus module.
The following configuration snippet sends data to your Jaeger:
{ &amp;#34;extra_config&amp;#34;:{ &amp;#34;telemetry/opencensus&amp;#34;: { &amp;#34;exporters&amp;#34;: { &amp;#34;jaeger&amp;#34;: { &amp;#34;endpoint&amp;#34;: &amp;#34;http://192.168.99.100:14268/api/traces&amp;#34;, &amp;#34;service_name&amp;#34;:&amp;#34;krakend&amp;#34;, &amp;#34;buffer_max_count&amp;#34;: 1000 } } } } } As with all OpenCensus exporters, you can add optional settings in the telemetry/opencensus level:</description></item><item><title>Exporting traces to AWS X-Ray</title><link>https://www.krakend.io/docs/enterprise/telemetry/xray/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/telemetry/xray/</guid><description>AWS X-Ray is a service offered by Amazon that provides an end-to-end view of requests as they travel through your application, and shows a map of your applicationâ€™s underlying components.
The Opencensus exporter allows you export data to AWS X-Ray. Enabling it only requires you to add the xray exporter in the opencensus module.
The following configuration snippet sends data to your X-Ray:
{ &amp;#34;extra_config&amp;#34;: { &amp;#34;telemetry/opencensus&amp;#34;: { &amp;#34;exporters&amp;#34;: { &amp;#34;xray&amp;#34;: { &amp;#34;version&amp;#34;: &amp;#34;latest&amp;#34;, &amp;#34;region&amp;#34;: &amp;#34;eu-west-1&amp;#34;, &amp;#34;use_env&amp;#34;: false, &amp;#34;access_key_id&amp;#34;: &amp;#34;myaccesskey&amp;#34;, &amp;#34;secret_access_key&amp;#34;: &amp;#34;mysecretkey&amp;#34; } } } } } As with all OpenCensus exporters, you can add optional settings in the telemetry/opencensus level:</description></item><item><title>Exporting metrics and traces to Google Cloud's operations suite</title><link>https://www.krakend.io/docs/enterprise/telemetry/stackdriver/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/telemetry/stackdriver/</guid><description>Google Cloud&amp;rsquo;s operation suite (formerly Stackdriver) aggregates metrics, logs, and events from infrastructure, giving developers and operators a rich set of observable signals that speed root-cause analysis and reduce mean time to resolution (MTTR).
The Opencensus exporter allows you to export metrics and traces to Google Cloud. Enabling it only requires you to add the stackdriver exporter in the opencensus module.
The following configuration snippet sends the data:
{ &amp;#34;extra_config&amp;#34;: { &amp;#34;telemetry/opencensus&amp;#34;: { &amp;#34;sample_rate&amp;#34;: 100, &amp;#34;reporting_period&amp;#34;: 60, &amp;#34;enabled_layers&amp;#34;: { &amp;#34;backend&amp;#34;: true, &amp;#34;router&amp;#34;: true, &amp;#34;pipe&amp;#34;: true }, &amp;#34;exporters&amp;#34;: { &amp;#34;stackdriver&amp;#34;: { &amp;#34;project_id&amp;#34;: &amp;#34;my-krakend-project&amp;#34;, &amp;#34;metric_prefix&amp;#34;: &amp;#34;krakend&amp;#34;, &amp;#34;default_labels&amp;#34;: { &amp;#34;env&amp;#34;: &amp;#34;production&amp;#34; } } } } } } As with all OpenCensus exporters, you can add optional settings in the telemetry/opencensus level:</description></item><item><title>Exporting metrics, logs and events to Azure Monitor</title><link>https://www.krakend.io/docs/enterprise/telemetry/azure/</link><pubDate>Mon, 16 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/telemetry/azure/</guid><description>Azure Monitor collect, analyzes, and acts on telemetry data from your Azure and on-premises environments. Azure Monitor helps you maximize performance and availability of your applications and proactively identify problems in seconds.
The Opencensus exporter allows you export data to Azure Monitor. To enable it add the ocagent exporter.</description></item><item><title>Exporting metrics, logs, and events to the OpenCensus Agent</title><link>https://www.krakend.io/docs/enterprise/telemetry/ocagent/</link><pubDate>Mon, 16 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/telemetry/ocagent/</guid><description>The ocagent exporter sends OpenCensus Stats and Traces to the OpenCensus Agent, instead of pushing data to backendsâ€™ exporters.
For instance, you can enable ocagent to upload data to the OpenCensus Agent, and from there, the agent is simply scraped by a Prometheus.
You can integrate the OpenCensus Agent with Azure Monitor, Jaeger, or Prometheus to name a few examples.
Enabling it only requires you to add the ocagent exporter in the opencensus module.</description></item><item><title>API Dashboard with Instana</title><link>https://www.krakend.io/docs/enterprise/telemetry/instana/</link><pubDate>Fri, 24 Jul 2020 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/telemetry/instana/</guid><description>Instana is a fully automated Application Performance Management (APM) solution designed specifically for the challenges of managing microservice and cloud-native applications.
With Instana you:
Gain instant visibility with zero effort Quickly make sense of chaotic modern environments Identify and solve performance issues in seconds Instana configuration The Instana exporter allows you export data to Instana. Enabling it only requires you to add the instana namespace with a few seetings as follows:</description></item><item><title>Exporting to the logger with OpenCensus</title><link>https://www.krakend.io/docs/enterprise/telemetry/logger/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/telemetry/logger/</guid><description>Opencensus can export data to the system logger as another exporter. This is not the standard KrakenD Logging, and you should not enable both.
Enabling it only requires you to add the logger exporter in the opencensus module.
The following configuration snippet enables the logger:
{ &amp;#34;extra_config&amp;#34;:{ &amp;#34;telemetry/opencensus&amp;#34;: { &amp;#34;exporters&amp;#34;: { &amp;#34;logger&amp;#34;: { &amp;#34;stats&amp;#34;: true, &amp;#34;spans&amp;#34;: true } } } } As with all OpenCensus exporters, you can add optional settings in the telemetry/opencensus level:</description></item><item><title>New Relic integration</title><link>https://www.krakend.io/docs/enterprise/telemetry/newrelic/</link><pubDate>Thu, 24 Feb 2022 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/telemetry/newrelic/</guid><description>The New Relic integration lets you push KrakenD metrics and distributed traces to your New Relic dashboard. It uses internally the official New Relic SDK and brings its features to your APM dashboard.
Examples of the data you can see on New Relic:
New Relic configuration To add KrakenD telemetry reporting to New Relic, you only need add the following configuration with your API Key:</description></item><item><title>Extended metrics</title><link>https://www.krakend.io/docs/enterprise/telemetry/extended-metrics/</link><pubDate>Mon, 05 Nov 2018 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/telemetry/extended-metrics/</guid><description>Collect extended metrics to push them to InfluxDB or expose them in the /__stats/ endpoint. The /__stats/ endpoint runs in a different port and contains a lot of metrics. This component is the richest in terms of metric data that you can use.
Through the extended metrics you can create new tools or integrate with existing ones. For instance, combining the metrics with the InfluxDB extended metrics you can have a Grafana dashboard.</description></item></channel></rss>