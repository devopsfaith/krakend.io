<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Service Settings on KrakenD - Open source API Gateway</title><link>https://www.krakend.io/docs/enterprise/v2.4/service-settings/</link><description>Recent content in Service Settings on KrakenD - Open source API Gateway</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 26 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://www.krakend.io/docs/enterprise/v2.4/service-settings/index.xml" rel="self" type="application/rss+xml"/><item><title>API Health Check</title><link>https://www.krakend.io/docs/enterprise/v2.4/service-settings/health/</link><pubDate>Mon, 07 Oct 2019 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v2.4/service-settings/health/</guid><description>The health endpoint (or the ping endpoint) allows you to query KrakenD to find out if it is ready to accept connections or not.
When KrakenD is up and running correctly, it exposes a /__health endpoint returning a 200 HTTP status code. It works automatically and without adding any specific configuration block. Nevertheless you can do customizations to it.
Health check response When you query the /__health endpoint, you should expect a 200 response code or no response at all.</description></item><item><title>Customizing router behavior</title><link>https://www.krakend.io/docs/enterprise/v2.4/service-settings/router-options/</link><pubDate>Fri, 29 Oct 2021 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v2.4/service-settings/router-options/</guid><description>The optional router configuration allows you to set global flags that change how KrakenD processes the requests globally at the router layer.
Generally speaking you don&amp;rsquo;t need this. But there is an exception in every case, and you might need to change some values.
Configuration for the router The router controls the behavior of KrakenD toward users. Its settings affect all activity in the gateway. For instance, you can obfuscate the X-KrakenD-version header, set a custom body for 404 errors, or remove the requests from the logs, to name a few examples.</description></item><item><title>Cross-Origin Resource Sharing (CORS) Configuration</title><link>https://www.krakend.io/docs/enterprise/v2.4/service-settings/cors/</link><pubDate>Fri, 10 Jul 2020 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v2.4/service-settings/cors/</guid><description>When KrakenD endpoints are consumed from a browser, you should enable the Cross-Origin Resource Sharing (CORS) module, as browsers restrict cross-origin HTTP requests initiated from scripts.
When the Cross-Origin Resource Sharing (CORS) configuration is enabled, KrakenD uses additional HTTP headers to tell browsers that they can use resources from a different origin (domain, protocol, or port). For instance, you will need this configuration if your web page is hosted at https://www.</description></item><item><title>Enabling TLS for HTTPS and HTTP/2</title><link>https://www.krakend.io/docs/enterprise/v2.4/service-settings/tls/</link><pubDate>Fri, 22 Feb 2019 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v2.4/service-settings/tls/</guid><description>The TLS settings define the parameters that the gateway takes into account to handle incoming and outgoing HTTPS traffic. We refer to this as:
tls: TLS settings, or how the gateway handles incoming traffic as a server. client_tls: Client TLS settings, or how the gateway connects to your upstream services Independent properties The properies tls and client_tls are independent of each other. You can declare one, both, or none. TLS server settings There are two different strategies when using TLS over KrakenD:</description></item><item><title>HTTP Security</title><link>https://www.krakend.io/docs/enterprise/v2.4/service-settings/security/</link><pubDate>Fri, 30 Sep 2016 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v2.4/service-settings/security/</guid><description>KrakenD has implemented several security strategies, controlled via krakend-httpsecure. To enable them you only need to add its namespace security/http at the extra_config in the root level of the configuration.
The following configuration describes all possible options:
{ &amp;#34;version&amp;#34;: 3, &amp;#34;extra_config&amp;#34;: { &amp;#34;security/http&amp;#34;: { &amp;#34;allowed_hosts&amp;#34;: [ &amp;#34;host.known.com:443&amp;#34; ], &amp;#34;ssl_proxy_headers&amp;#34;: { &amp;#34;X-Forwarded-Proto&amp;#34;: &amp;#34;https&amp;#34; }, &amp;#34;host_proxy_headers&amp;#34;:[ &amp;#34;X-Forwarded-Hosts&amp;#34; ], &amp;#34;ssl_redirect&amp;#34;: true, &amp;#34;ssl_host&amp;#34;: &amp;#34;ssl.host.domain&amp;#34;, &amp;#34;sts_seconds&amp;#34;: 300, &amp;#34;sts_include_subdomains&amp;#34;: true, &amp;#34;frame_deny&amp;#34;: true, &amp;#34;referrer_policy&amp;#34;: &amp;#34;same-origin&amp;#34;, &amp;#34;custom_frame_options_value&amp;#34;: &amp;#34;ALLOW-FROM https://example.</description></item><item><title>Advanced HTTP Server settings</title><link>https://www.krakend.io/docs/enterprise/v2.4/service-settings/http-server-settings/</link><pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v2.4/service-settings/http-server-settings/</guid><description>KrakenD starts an HTTP server to offer the API Gateway server. You can personalize some of the settings used to start the service and also override the default settings of the underlying Go standard library.
If you want to customize any of the settings below, they must be written at the top level of the configuration.
Fields of "false" * required fields cache_ttl string Sets a default Cache-Control: public, max-age=%d header to all endpoints where %d is the conversion to seconds of any duration you write, indicating for how long the client (or CDN) can cache the content of the request.</description></item><item><title>Advanced HTTP Transport settings</title><link>https://www.krakend.io/docs/enterprise/v2.4/service-settings/http-transport-settings/</link><pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v2.4/service-settings/http-transport-settings/</guid><description>When KrakenD communicates using http, it implements a concurrent-safe round tripper that supports HTTP, HTTPS, and HTTP proxies, and it caches connections for future re-use. This may leave many open connections when accessing many hosts. You can change the behavior of the transport layer using several settings presented below.
If you want to customize any of the settings below, they must be written at the top level of the configuration.</description></item><item><title>Automatic Gzip compression</title><link>https://www.krakend.io/docs/enterprise/v2.4/service-settings/gzip/</link><pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v2.4/service-settings/gzip/</guid><description>KrakenD Enterprise compresses with gzip all traffic returned to the client when the request contains an Accept-Encoding: gzip header.
The gzip is not applied when the header is missing or when the Accept-Encoding header contains a text/event-stream value.
Gzip compression is unrelated to decompression when consuming content from your services. Decompression is also done automatically, but in all KrakenD flavors, not only Enterprise.
When the content is successfully compressed, the response contains a &amp;quot;Content-Encoding: gzip&amp;quot; header.</description></item><item><title>Service Rate Limiting to Control API Usage</title><link>https://www.krakend.io/docs/enterprise/v2.4/service-settings/service-rate-limit/</link><pubDate>Sun, 17 Oct 2021 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v2.4/service-settings/service-rate-limit/</guid><description>The service rate limit feature allows you to set the maximum requests per second a user or group of users can do to KrakenD and works analogously to the endpoint rate limit. There are two different strategies to set limits that you can use, simultaneously or individually:
Service rate-limit: Defines the rate-limit that all users of your API can do together, sharing the same counter. For instance, you might want to limit the interaction from users to KrakenD to 10,000 requests/second to avoid a possible DDoS propagating to your backend services.</description></item><item><title>Virtual Hosts</title><link>https://www.krakend.io/docs/enterprise/v2.4/service-settings/virtual-hosts/</link><pubDate>Thu, 05 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v2.4/service-settings/virtual-hosts/</guid><description>The Virtual Host server allows you to run different configurations of KrakenD endpoints based on the host accessing the server.
For instance, you can declare an endpoint /foo that behaves entirely differently when KrakenD is accessed through a host-a.tld or a host-b.tld. For instance, the same /foo path can have different rate limits or authorization endpoints depending on the called host.
Virtual host configuration To add virtual hosts, add the component server/virtualhost under the service extra_config, as depicted below:</description></item></channel></rss>