<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>KrakenD API Gateway Documentation on KrakenD - Open source API Gateway</title><link>https://www.krakend.io/docs/enterprise/v2.10/</link><description>Recent content in KrakenD API Gateway Documentation on KrakenD - Open source API Gateway</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 09 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://www.krakend.io/docs/enterprise/v2.10/index.xml" rel="self" type="application/rss+xml"/><item><title>API Key Authentication in KrakenD</title><link>https://www.krakend.io/docs/enterprise/v2.10/authentication/api-keys/</link><pubDate>Tue, 10 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v2.10/authentication/api-keys/</guid><description>API key authentication enables a Role-Based Access Control (RBAC) and a rate-limiting mechanism based on an API key passed by the client. For the desired endpoints, KrakenD rejects requests from users who do not provide a valid key, users trying to access a resource with insufficient permissions for their role, or exceeding the defined quota.
The authentication is granular and works per endpoint, meaning you can combine public endpoints (no API Key needed) and private endpoints in the same configuration.</description></item><item><title>Basic Authentication</title><link>https://www.krakend.io/docs/enterprise/v2.10/authentication/basic-authentication/</link><pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v2.10/authentication/basic-authentication/</guid><description>The Basic Authentication functionality protects access to selected endpoints using basic username and password credentials. The functionality works at the router level, and the backend is never hit when the authentication fails.
The plugin version is now deprecated Prior to v2.2, the basic authentication was provided by a plugin. The plugin&amp;rsquo;s usage is still supported for backward compatibility but is considered deprecated. Please follow the steps at the end of this document to upgrade.</description></item><item><title>API Governance using Quota</title><link>https://www.krakend.io/docs/enterprise/v2.10/governance/quota/</link><pubDate>Fri, 09 May 2025 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v2.10/governance/quota/</guid><description>The Quota feature allows teams to enforce quota limits by tier, enabling API monetization strategies such as freemium plans, usage-based tiers, and differentiated service levels, but also helps you contain the expenses when using external APIs or AI providers.
The Quota system is equally powerful in egress and ingress scenarios:
On the egress side, organizations can enforce internal consumption controls. For instance, when KrakenD acts as an AI Gateway proxying to LLM models or metered third-party APIs.</description></item><item><title>WebSockets Integration</title><link>https://www.krakend.io/docs/enterprise/v2.10/websockets/</link><pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v2.10/websockets/</guid><description>KrakenD Enterprise supports communications using the WebSocket Protocol (RFC-6455) to enable two-way communication between a client and a backend host through the API gateway. This technology aims to provide a mechanism for applications that need two-way communication with servers that do not rely on opening multiple HTTP connections.
KrakenD can work with Websockets using two different strategies:
Using multiplexing (default and recommended) Using direct communication Multiplexing When using multiplexing (the default behavior), each end client (e.</description></item><item><title>Revoke Server for clusters</title><link>https://www.krakend.io/docs/enterprise/v2.10/authentication/revoke-server/</link><pubDate>Fri, 07 Oct 2022 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v2.10/authentication/revoke-server/</guid><description>The Revoke Server (a.k.a Revoker) is a standalone server that coordinates token revocation in a KrakenD Cluster. When you start the service, it offers a ping endpoint for all KrakenD instances to self-register and pushes token revocation instructions to all nodes in the cluster.
The Revoker passes the instructions to all instances by connecting to their bloom filter RPC port. It offers centralized management despite the size of your cluster. You no longer need to know how many KrakenDs are running using the Revoke Server and interact with them individually.</description></item><item><title>Multiple Identity Providers</title><link>https://www.krakend.io/docs/enterprise/v2.10/authentication/multiple-identity-providers/</link><pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v2.10/authentication/multiple-identity-providers/</guid><description>The JWK aggregator plugin allows KrakenD to validate tokens issued by numerous Identity Providers or multiple realms of the same Identity Server.
The default behavior of KrakenD allows you to validate JWT tokens using a single Identity Provider or tenant per endpoint. However, sometimes, tokens arriving at an endpoint originate in different providers or, tenants or realms. It might be because you have a multi-tenant scenario, an ongoing migration, or other systems that converge into the gateway.</description></item><item><title>Google Cloud service-to-service authentication</title><link>https://www.krakend.io/docs/enterprise/v2.10/authentication/gcloud/</link><pubDate>Wed, 10 May 2023 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v2.10/authentication/gcloud/</guid><description>KrakenD supports the three different service-to-service authentication mechanisms Google Cloud provides: Service Accounts (this page), OAuth 2.0, and Mutual TLS Authentication.
A service account is a special type of Google account that belongs to an application or a virtual machine. Service accounts are used to authenticate requests to Google Cloud APIs and services or when connecting to your Google Cloud Run services if you added an option &amp;ldquo;Require Authentication&amp;rdquo;.
When KrakenD requests a Google Cloud resource, Google Cloud checks the IAM policy associated with the resource to determine whether it has the necessary permissions to access the resource.</description></item><item><title>Moesif integration for API Analytics and Monetization</title><link>https://www.krakend.io/docs/enterprise/v2.10/governance/moesif/</link><pubDate>Fri, 20 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v2.10/governance/moesif/</guid><description>Moesif is our API Analytics and Monetization partner that helps you understand and monetize API usage with a robust analytics and billing platform. While KrakenD focuses on organizing and protecting your content through the API gateway, Moesif provides governance and monetization dashboards that allow you to rule the activity on the API.
When the Moesif integration is enabled on KrakenD, the activity of your API is asynchronously pushed to Moesif, where you can configure your API governance and API Monetization rules.</description></item><item><title>NTLM authentication</title><link>https://www.krakend.io/docs/enterprise/v2.10/authentication/ntlm/</link><pubDate>Tue, 10 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v2.10/authentication/ntlm/</guid><description>NTLM (NT Lan Manager) is a suite of Microsoft security protocols used for authentication, integrity, and confidentiality of network communications. It is primarily used for authentication on Windows-based systems but can also be used in other environments.
KrakenD NTLM integration does the user impersonation and acts as a client in the communication gateway to the backend. The end-user authentication is independent, and you can offer standard JWT tokens, no authentication, or another authentication option.</description></item></channel></rss>