<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction to KrakenD Enterprise on KrakenD - Open source API Gateway</title><link>https://www.krakend.io/docs/enterprise/v1.3/overview/</link><description>Recent content in Introduction to KrakenD Enterprise on KrakenD - Open source API Gateway</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 06 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.krakend.io/docs/enterprise/v1.3/overview/index.xml" rel="self" type="application/rss+xml"/><item><title>Installing KrakenD Enterprise</title><link>https://www.krakend.io/docs/enterprise/v1.3/overview/installing/</link><pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v1.3/overview/installing/</guid><description>KrakenD Enterprise is delivered in several formats, including Docker, Linux packages (deb, rpm) and generic installation options.
Find your KrakenD License email To download any Enterprise binaries, check your inbox and find our license activation email with the certificates to access the Enterprise content. Docker If you are already familiar with Docker, the easiest way to get started is by pulling our KrakenD image from Azure or AWS.</description></item><item><title>Running KrakenD</title><link>https://www.krakend.io/docs/enterprise/v1.3/overview/usage/</link><pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v1.3/overview/usage/</guid><description>From an operations point of view, KrakenD is very simple to use. It only requires you to pass the path to the configuration file(s) which define behaviors and endpoints.
Make sure KrakenD can find a krakend.json and a LICENSE file. You can create an initial krakend.json with the following content:
Create a minimal configuration file&amp;nbsp; $echo '{ "version": 2 }' krakend.json And then run the container (AWS example):</description></item><item><title>Enterprise plugins</title><link>https://www.krakend.io/docs/enterprise/v1.3/overview/plugins/</link><pubDate>Sun, 31 Jan 2021 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v1.3/overview/plugins/</guid><description>A great deal of the functionality offered by KrakenD Enterprise is presented as plugins. It&amp;rsquo;s important to understand a few concepts and particularities of plugins before you start using them.
What is a plugin? A plugin is a soft-linked library; thus, a separated binary file (.so), that when running in conjunction with KrakenD, can participate in the processing. Plugins and middlewares are close concepts, but while middlewares are part of the KrakenD binary, plugins are not.</description></item><item><title>Lura vs. KrakenD</title><link>https://www.krakend.io/docs/enterprise/v1.3/overview/krakend-vs-krakend-ce/</link><pubDate>Sat, 23 Jun 2018 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v1.3/overview/krakend-vs-krakend-ce/</guid><description>If you had a quick look at our git repositories or the documentation, you might be confused at first, as there is something called the Lura Project and also KrakenD.
TL;DR; Difference between Lura, KrakenD, and Enterprise Lura is the KrakenD&amp;rsquo;s engine. Formerly known as &amp;ldquo;KrakenD framework&amp;rdquo; until we donated it to The Linux Foundation on 2021. It is not a product itself but a set of libraries. KrakenD is our open-source API Gateway ready to use KrakenD Enterprise is our commercial version, including services to businesses Lura Project The Lura Project is our original KrakenD framework that we donated to The Linux Foundation on 2021.</description></item><item><title>The KrakenD Playground</title><link>https://www.krakend.io/docs/enterprise/v1.3/overview/playground/</link><pubDate>Thu, 13 Sep 2018 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v1.3/overview/playground/</guid><description>If you are new to KrakenD, a quick way to get started is to make use of the KrakenD Playground.
The KrakenD Playground is a Docker Compose environment that puts together the necessary pieces to let you play with KrakenD in a working environment.
As KrakenD is an API gateway, we have also added to the environment an API (backend) to feed the gateway and a website to make use of the data.</description></item><item><title>Tutorials and Guides</title><link>https://www.krakend.io/docs/enterprise/v1.3/overview/guides/</link><pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v1.3/overview/guides/</guid><description>The documentation in this site covers all the functionality of KrakenD API Gateway, but over time we have received from KrakenD users all kinds of tutorials, guides and other resources that illustrate how to to do a specific thing. We have included below a few links, but you can share yours.
User-contributed resources Getting started with KrakenD on Kubernetes / AKS by Christian Dennig (Cloud Solution Architect @Microsoft) Microservices with Micronaut, KrakenD and Consul by Piotr Minkowski (Solution Architect @ Red Hat) How to Successfully Set Up KrakenD on GKE: A Step by Step Guide by Vijay Savanth on Hackernoon Writing Plugins using Golang by Ilya Nemtsev on Eventslooped Building Micro Services with .</description></item><item><title>Verifying packages (PGP and SHA256)</title><link>https://www.krakend.io/docs/enterprise/v1.3/overview/verifying-packages/</link><pubDate>Fri, 01 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/enterprise/v1.3/overview/verifying-packages/</guid><description>How to make sure what you are downloading is legit.
PGP We will check the detached signature PGP against our package KrakenD.
$ gpg --verify krakend_1.3.0_amd64.tar.gz.asc krakend_1.3.0_amd64.tar.gz gpg: Signature made Sun Mar 10 18:17:18 2019 UTC using RSA key ID 5DE6FD698AD6FDD2 gpg: Can't check signature: public key not found We don&amp;rsquo;t have the packager public key (AB39BEA1) in our system. You need to retrieve the public key from a key server.</description></item></channel></rss>