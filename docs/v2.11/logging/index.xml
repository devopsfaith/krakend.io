<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Logging on KrakenD - Open source API Gateway</title><link>https://www.krakend.io/docs/v2.11/logging/</link><description>Recent content in Logging on KrakenD - Open source API Gateway</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 25 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.krakend.io/docs/v2.11/logging/index.xml" rel="self" type="application/rss+xml"/><item><title>Graylog GELF Logging Integration</title><link>https://www.krakend.io/docs/v2.11/logging/graylog-gelf/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/v2.11/logging/graylog-gelf/</guid><description>KrakenD supports sending structured events in GELF format to your Graylog Cluster thanks to the krakend-gelf integration.
The setup of GELF is straightforward and requires to add two components in the configuration:
telemetry/logging to capture the logs telemetry/gelf to format the logs The configuration you need to add is this, and explained below:
{ &amp;#34;extra_config&amp;#34;: { &amp;#34;telemetry/gelf&amp;#34;: { &amp;#34;address&amp;#34;: &amp;#34;myGraylogInstance:12201&amp;#34;, &amp;#34;enable_tcp&amp;#34;: false }, &amp;#34;telemetry/logging&amp;#34;: { &amp;#34;level&amp;#34;: &amp;#34;INFO&amp;#34;, &amp;#34;prefix&amp;#34;: &amp;#34;[KRAKEND]&amp;#34;, &amp;#34;syslog&amp;#34;: false, &amp;#34;stdout&amp;#34;: false } } } The GELF configuration parameters for telemetry/gelf are:</description></item><item><title>Logstash Integration (JSON logs)</title><link>https://www.krakend.io/docs/v2.11/logging/logstash/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/v2.11/logging/logstash/</guid><description>The Logstash integration prints KrakenD application logs in JSON format (not access logs) to ingest them and process them later. If you want to log using the Logstash standard via stdout, you need to add the telemetry/logging integration as a dependency.
Configuration The configuration you need to enable Logstash is very simple:
{ &amp;#34;version&amp;#34;: 3, &amp;#34;extra_config&amp;#34;: { &amp;#34;telemetry/logging&amp;#34;: { &amp;#34;level&amp;#34;: &amp;#34;INFO&amp;#34;, &amp;#34;prefix&amp;#34;: &amp;#34;[KRAKEND]&amp;#34;, &amp;#34;stdout&amp;#34;: true, &amp;#34;syslog&amp;#34;: false, &amp;#34;format&amp;#34;:&amp;#34;custom&amp;#34;, &amp;#34;custom_format&amp;#34;: &amp;#34;%{message}&amp;#34; }, &amp;#34;telemetry/logstash&amp;#34;:{ &amp;#34;enabled&amp;#34;: true } } } When the format of the logging format is logstash then the output of the application log (not the access log) is printed in JSON format, as follows:</description></item><item><title>ELK Integration for Logging</title><link>https://www.krakend.io/docs/v2.11/logging/elk-integration/</link><pubDate>Wed, 21 Sep 2022 00:00:00 +0000</pubDate><guid>https://www.krakend.io/docs/v2.11/logging/elk-integration/</guid><description>KrakenD can push logs to external services; a good example is an integration with the ELK Stack (Elastic + Logstash + Kibana). The ELK integration allows you to have KrakenD pushing logs to your Elastic server and visualize them through a Kibana dashboard.
The Kibana dashboard lets you monitor the logging activity of the gateway and identify problems quickly. The included dashboard is a starting point that provides typical graphs and metrics, but you can extend it as per your needs and add other metrics to watch.</description></item></channel></rss>